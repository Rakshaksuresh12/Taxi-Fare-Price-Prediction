import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
np.random.seed(42)
num_samples = 10000
passenger_count = np.random.randint(1, 7, size=num_samples)
distance = np.random.uniform(0.5, 50.0, size=num_samples)
fare_amount = 2.5 + 2.0 * distance + 5.0 * passenger_count + np.random.normal(0, 3, size=num_samples)
data = pd.DataFrame({'passenger_count': passenger_count, 'distance': distance, 'fare_amount': fare_amount})
plt.figure(figsize=(10, 6))
sns.histplot(data['fare_amount'], bins=30, kde=True)
plt.title('Distribution of Fare Amount')
plt.xlabel('Fare Amount')
plt.ylabel('Frequency')
plt.show()
sns.pairplot(data, x_vars=['passenger_count', 'distance'], y_vars=['fare_amount'], kind='scatter', height=5)
plt.title('Relationship between Numerical Features and Fare Amount')
plt.show()
X = data[['passenger_count', 'distance']]
y = data['fare_amount']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel('Actual Fare Amount')
plt.ylabel('Predicted Fare Amount')
plt.title('Actual vs. Predicted Fare Amount')
plt.show()
